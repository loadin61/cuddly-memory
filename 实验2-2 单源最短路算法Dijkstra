#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iomanip>
using namespace std;
typedef long long ll;
const int inf = 0x3f3f3f3f;
int a[3010][3010], d[3010], n, m;
bool vis[3010];
void dijkstra() {
	memset(d, inf, sizeof(d));
	memset(vis, 0, sizeof(vis));
	d[1] = 0;
	//重复进行n-1次
	for (int i = 1; i < n; i++) {
		int x = 0;
		//找到未标记节点中d最小的
		for (int j = 1; j <= n; j++) {
			if (!vis[j] && (x == 0 || d[j] < d[x]))	x = j;
		}
		vis[x] = 1;
		//用全局最小值点x更新其他节点
		for (int y = 1; y <= n; y++) {
			d[y] = min(d[y], d[x] + a[x][y]);
		}
	}
}
int main() {
	scanf("%d %d", &n, &m);
	memset(a, inf, sizeof(a));
	for (int i = 1; i <= n; i++)	a[i][i] = 0;
	for (int i = 1; i <= m; i++) {
		int x, y, z;
		scanf("%d %d %d", &x, &y, &z);
		a[x][y] = min(a[x][y], z);
	}
	dijkstra();
	for (int i = 1; i <= n; i++) {
		printf("1 -> %d : %d\n", i, d[i]);
	}
}
